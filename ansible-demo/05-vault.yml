---
- name: testing vault
  hosts: localhost
  vars:
    # ansible-vault encrypt_string --ask-vault-pass "my secret variable" --name "vault_var"
    vault_var: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          63393732633135323533623834653933366435386433663666366237623937323936666663303236
          6134326161343539336335313636663634343636633239330a386139666563323931343234656632
          30626465393539633730373064663634356233653566313938633363333234633066653135336639
          6439613262303234370a623466646566613931373732303166346139383236636661313833383161
          33373163323537613064316465613831663734386432653339393132373637313235

    # ansible-vault encrypt_string --vault-id dev@prompt "dev vault variable one" --name "dev_vault_var_one"
    dev_vault_var_one: !vault |
          $ANSIBLE_VAULT;1.2;AES256;dev
          38376633346465313835666666313765323535636364393966396338373139636465346430346637
          3135636364643238373439646563383538636538333937330a633139333030323765353538373763
          61653465323037636164386637353966363037356264363230663762373736336637376633373131
          3739313465376663640a373139363930623161613130393631373261656637643635633931396539
          30346335636234366361666239633239343363373230373434383631366637326463

  tasks:
     # working with vault-encrypted strings
    - name: print inline var
      debug:
        msg: "{{ vault_var }}"


    # working with vault-encrypted files
    # ansible-vault encrypt inventory/vault_vars.yml
    # ansible-playbook 05-vault.yml --ask-vault-pass
    # ansible-vault decrypt inventory/vault_vars.yml
    #- name: read vault_vars file
    #  include_vars:
    #    file: inventory/vault_vars.yml
#
    #- name: print out sensitive data
    #  debug:
    #    msg:
    #      - "{{ super_secret_1 }} and {{ super_secret_2 }}"
