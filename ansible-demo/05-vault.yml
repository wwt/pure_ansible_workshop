---
- name: testing vault
  hosts: localhost
  vars:
    # ansible-vault encrypt_string --ask-vault-pass "my secret variable" --name "vault_var"
    vault_var: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          63616630356236623933623461376563346638323765666137326433646432636266623064663532
          6265643061613265363966343065663265303436656265340a306434616232343262373934356162
          35376338633734306561623333366666386365646538323763663632396433643836316663663066
          3432386637383437380a666431643137396265396636653935636436373836386232313734646532
          34353564303930613633633730343365613036383562346138626631373463393263

    # ansible-vault encrypt_string --vault-id dev@prompt "dev vault variable one" --name "dev_vault_var_one"
    dev_vault_var_one: !vault |
          $ANSIBLE_VAULT;1.2;AES256;dev
          38376633346465313835666666313765323535636364393966396338373139636465346430346637
          3135636364643238373439646563383538636538333937330a633139333030323765353538373763
          61653465323037636164386637353966363037356264363230663762373736336637376633373131
          3739313465376663640a373139363930623161613130393631373261656637643635633931396539
          30346335636234366361666239633239343363373230373434383631366637326463

  tasks:
     # working with vault-encrypted strings
    # - name: print inline var
    #   debug:
    #     msg: "{{ vault_var }}"


    # working with vault-encrypted files
    # ansible-vault encrypt inventory/vault_vars.yml
    # ansible-playbook 05-vault.yml --ask-vault-pass
    # ansible-vault decrypt inventory/vault_vars.yml
    - name: read vault_vars file
      include_vars:
        file: inventory/vault_vars.yml
#
    - name: print out sensitive data
      debug:
        msg:
          - "{{ super_secret_1 }} and {{ super_secret_2 }}"
