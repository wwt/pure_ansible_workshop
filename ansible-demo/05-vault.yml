---
- name: testing vault
  hosts: localhost
  vars:
    # ansible-vault encrypt_string --ask-vault-pass "my secret variable" --name "vault_var"
    vault_var: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          66303762363537626634303635646665383763656337383439633764383562653632393437646265
          3831346530343535613934326233616562643335366366640a643531353130663231616263616637
          64376261653362666238363231346333313861363364303165633034346461323938616536346630
          3062303734346239610a643965313139633966643431646239376262373861353862336130643264
          66303765393532626138636261323431363463303234373364646132626162323238

    # ansible-vault encrypt_string --vault-id dev@prompt "dev vault variable one" --name "dev_vault_var_one"
    dev_vault_var_one: !vault |
          $ANSIBLE_VAULT;1.2;AES256;dev
          38376633346465313835666666313765323535636364393966396338373139636465346430346637
          3135636364643238373439646563383538636538333937330a633139333030323765353538373763
          61653465323037636164386637353966363037356264363230663762373736336637376633373131
          3739313465376663640a373139363930623161613130393631373261656637643635633931396539
          30346335636234366361666239633239343363373230373434383631366637326463

  tasks:
    # working with vault-encrypted strings
    #- name: print inline var
    #  debug:
    #    msg: "{{ vault_var }}"


    # working with vault-encrypted files
    # ansible-vault encrypt inventory/vault_vars.yml
    # ansible-playbook 05-vault.yml --ask-vault-pass
    # ansible-vault decrypt inventory/vault_vars.yml
    - name: read vault_vars file
      include_vars:
        file: inventory/vault_vars.yml

    - name: print out sensitive data
      debug:
        msg:
          - "{{ super_secret_1 }} and {{ super_secret_2 }}"
