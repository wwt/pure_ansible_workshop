---
- name: get lookup info
  hosts: purefa1
  tasks:
    - name: read csv file
      community.general.read_csv:
        path: inventory/assertions_pure_vol.csv
        fieldnames: volume_name,volume_size,datastore,vcenter_cluster
        delimiter: ','
      register: volumes
      delegate_to: localhost

    # Assertions Section
    - name: assert that volume size is between 1G and 20G
      assert:
        that:
          - "{{ item['volume_size'].split('G')[0] | int  >= 1 }}"
          - "{{ item['volume_size'].split('G')[0] | int  <= 20 }}"
        fail_msg: "{{ item['volume_size'] }} is not between 1G and 20G"
        success_msg: "{{ item['volume_size'] }} is in bounds"
      loop: "{{ volumes['list'] }}"
      when: item.volume_size != 'volume_size'

    - name: assert that volume name is a proper length
      assert:
        that:
          - "{{ item['volume_name'] | length > 4 }}"
          - "{{ item['volume_name'] | length <= 20 }}"
        fail_msg: "{{ item['volume_name'] }} is an improper name length for a volume name. Must be between 4 and 20 characters"
        success_msg: "{{ item['volume_name'] }} is the proper length for a volume name"
      loop: "{{ volumes['list'] }}"
      when: item.volume_size != 'volume_size'

    - name: assert that no dashes exist in volume name
      assert:
        that:
          - "{{ '-' not in item['volume_name'] }}"
        fail_msg: "{{ item['volume_name'] }} contains a '-', please use '_' instead"
        success_msg: "{{ item['volume_name'] }} meets character assertions"
      loop: "{{ volumes['list'] }}"
      when: item.volume_size != 'volume_size'

    # creating objects on the Pure Flash Array
    - name: create new volume on purefa1
      delegate_to: localhost
      purestorage.flasharray.purefa_volume:
        name: "{{ item.volume_name }}"
        size: "{{ item.volume_size }}"
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        state: "{{ vol_state | default('present') }}"
      loop: "{{ volumes['list'] }}"
      when: item.volume_size != 'volume_size'

    - name: Mask Volume
      delegate_to: localhost
      purestorage.flasharray.purefa_hg:
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        hostgroup: "{{ item.vcenter_cluster }}"
        volume: "{{ item.volume_name }}"
        state: "{{ vol_state | default('present') }}"
      loop: "{{ volumes['list'] }}"
      when: item['datastore'].lower() == 'yes'

    - name: Get Volume Information from Purefa
      delegate_to: localhost
      purestorage.flasharray.purefa_info:
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        gather_subset: volumes
      register: pure_info

- name: manage datastores in vcenter
  hosts: vmware
  tasks:

    - name: set facts for volume and VCS Cluster name
      set_fact:
        csv_cluster_name: "{{ item.vcenter_cluster }}"
      loop: "{{ hostvars['purefa1']['volumes']['list'] }}"
      when: item['datastore'].lower() == 'yes'

    - name: rescan esxi hosts for new storage
      delegate_to: localhost
      community.vmware.vmware_host_scanhba:
        hostname: "{{ ansible_host }}"
        username: "{{ vcs_username }}"
        password: "{{ vcs_password }}"
        cluster_name: "{{ csv_cluster_name }}"
        refresh_storage: true
        validate_certs: "{{ validate_certs }}"
      register: hba_info

    - name: Build Datastore
      delegate_to: localhost
      vmware_host_datastore:
        hostname: "{{ ansible_host }}"
        username: "{{ vcs_username }}"
        password: "{{ vcs_password }}"
        validate_certs: "{{ validate_certs }}"
        datastore_type: vmfs
        datastore_name: "{{ item.volume_name }}"
        vmfs_device_name: "naa.624a9370{{ hostvars['purefa1']['pure_info']['purefa_info']['volumes'][item.volume_name]['serial'] | lower }}"
        vmfs_version: 6
        esxi_hostname: "{{ (hba_info.result | dict2items)[0].key }}"
      loop: "{{ hostvars['purefa1']['volumes']['list'] }}"
      when: item['datastore'].lower() == 'yes'

- name: create markdown file
  hosts: purefa1

  tasks:
    - name: check configuration information
      delegate_to: localhost
      purestorage.flasharray.purefa_info:
       fa_url: purefa1.lab.local
       api_token: 125cfec6-560a-ca26-e7af-27be411d3959
       gather_subset:
        - volumes
      register: volume_info

    - name: show volume information
      debug:
        msg: 
          - "volume_name: {{ item.key }}"
          - "volume_size: {{ item.value.size | human_readable(unit='G') }}"
      loop: "{{ volume_info['purefa_info']['volumes'] | dict2items }}"

- name: manage datastores in vcenter
  hosts: vmware
  tasks:
    - name: get datastore info
      delegate_to: localhost
      community.vmware.vmware_datastore_info:
        hostname: "{{ ansible_host }}"
        username: "{{ vcs_username }}"
        password: "{{ vcs_password }}"
        datacenter_name: atc
        validate_certs: "{{ validate_certs }}"
      register: datastore_info
      tags: vmw

    - name: show ds information
      debug:
        msg: 
          - "{{ item.name }}"
          - "{{ item.capacity | human_readable(unit='G') }}"
          - "{{ item.provisioned | human_readable(unit='G') }}"
      loop: "{{ datastore_info['datastores'] }}"
      tags: vmw

    - name: create markdown with jinja2 template
      delegate_to: localhost
      ansible.builtin.template:
        src: templates/storage-report.j2
        dest: documentation/pure_storage_report.md

    - name: do a git diff to see if file has changed
      delegate_to: localhost
      shell: git diff documentation/pure_storage_report.md
      register: git_diff
      tags:
        - git
        - diff

    - name: print diff
      delegate_to: localhost
      debug:
        msg: "nothing to commit"
      tags:
        - git
        - diff
      when: git_diff.stdout == ""

    - name: print diff
      delegate_to: localhost
      debug:
        msg: "starting git add commit"
      notify: 
        - add documentation to git staging
      when: git_diff.stdout != ""
      tags:
        - git
        - diff

    - name: run git add commit push
      block:
        - name: add documentation to git staging
          delegate_to: localhost
          shell: git add documentation/pure_storage_report.md
          register: git_add
          tags:
            - git
            - add

        - name: print git message
          debug:
            msg: "{{ git_add }}"
          tags:
            - git
            - add

        - name: commit documentation to git
          delegate_to: localhost
          shell: "git commit -m 'documentation added by ansible'"
          register: git_commit
          tags: 
            - commit
            - git

        - name: push storage documentation to github
          delegate_to: localhost
          shell: git push
          tags:
            - git
            - push
      when: git_diff.stdout != ""
