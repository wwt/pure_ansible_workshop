---
- name: reset datastores in vcenter
  hosts: vmware
  tasks:
    - name: rescan esxi hosts for hba info
      delegate_to: localhost
      community.vmware.vmware_host_scanhba:
        hostname: "{{ ansible_host }}"
        username: "{{ vcs_username }}"
        password: "{{ vcs_password }}"
        cluster_name: "{{ cluster_name }}"
        refresh_storage: true
        validate_certs: "{{ validate_certs }}"
      register: hba_info

    - name: Umount Datastores from a ESXi
      community.vmware.vmware_host_datastore:
        hostname: '{{ ansible_host }}'
        username: '{{ vcs_username }}'
        password: '{{ vcs_password }}'
        validate_certs: "{{ validate_certs }}"
        datastore_name: "{{ datastore_name }}"
        state: absent
        esxi_hostname: "{{ (hba_info.result | dict2items)[0].key }}"
      delegate_to: localhost

- name: reset pure configuration
  hosts: purefa1
  tasks:
    - name: check disk information for host_groups
      delegate_to: localhost
      purestorage.flasharray.purefa_info:
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        gather_subset:
          - hgroups
      register: hgroups_info
      tags: host_groups

    - name: delete host groups
      delegate_to: localhost
      purestorage.flasharray.purefa_hg:
        hostgroup: "{{ item.key }}"
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        state: absent
      loop: "{{ hgroups_info['purefa_info']['hgroups'] | dict2items }}"
      tags: host_groups

    - name: check disk information for hosts
      delegate_to: localhost
      purestorage.flasharray.purefa_info:
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        gather_subset:
          - hosts
      register: hosts
      tags: hosts

    - name: delete hosts
      delegate_to: localhost
      purestorage.flasharray.purefa_host:
        name: "{{ item.key }}"
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        state: absent
      loop: "{{ hosts['purefa_info']['hosts'] | dict2items }}"
      tags: hosts

    - name: check disk information for snapshots
      delegate_to: localhost
      purestorage.flasharray.purefa_info:
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        gather_subset:
          - snapshots
      register: snapshots_info
      tags: snapshots

    - name: delete active snapshots
      delegate_to: localhost
      purestorage.flasharray.purefa_snap:
        name: "{{ item['key'].split('.')[0] }}"
        suffix: "{{ item['key'].split('.')[1] }}"
        eradicate: True
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        state: absent
      loop: "{{ snapshots_info['purefa_info']['snapshots'] | dict2items }}"
      tags: snapshots

    - name: delete deleted snapshots
      delegate_to: localhost
      purestorage.flasharray.purefa_snap:
        name: "{{ item['key'].split('.')[0] }}"
        suffix: "{{ item['key'].split('.')[1] }}"
        eradicate: True
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        state: absent
      loop: "{{ snapshots_info['purefa_info']['deleted_snapshots'] | dict2items }}"
      tags: snapshots

    - name: check disk information
      delegate_to: localhost
      purestorage.flasharray.purefa_info:
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        gather_subset:
          - volumes
      register: volume_info
      tags: volumes

    - name: delete volumes
      delegate_to: localhost
      purestorage.flasharray.purefa_volume:
        name: "{{ item.key }}"
        eradicate: True
        fa_url: "{{ inventory_hostname }}"
        api_token: "{{ api_token }}"
        state: absent
      loop: "{{ volume_info['purefa_info']['volumes'] | dict2items }}"
      tags: volumes
